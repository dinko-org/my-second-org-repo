name: Run Azure Login with OIDC
on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

 # These environment variables are used by the terraform azure provider to setup OIDD authenticate. 
env:
 # ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
 # ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
 
  
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:

      # Step 2: Authenticate with Azure using OIDC (More Secure than Secrets)
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Run az commands'
        run: |
          az account show


     # Step 1: Checkout Repo
      - name: Checkout repository
        uses: actions/checkout@v4
        
      # Step 3: Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      # Step 4: Initialize Terraform (Remote Backend)
      - name: Terraform Init
        run: terraform init

      - name: "Terraform Format Check"
        run: terraform fmt -check
        continue-on-error: true  # Fails if formatting is incorrect

      - name: "Terraform Validate"
        run: terraform validate  

      # Step 5: Terraform Plan
      - name: Terraform Plan
        run: terraform plan -out=tfplantest
        
      - name: "Upload Terraform Plan"
        uses: actions/upload-artifact@v4
        with:
          name: tfplantest
          path: tfplantest
        
  apply:
    name: "Terraform Apply"
    needs: build-and-deploy
    runs-on: ubuntu-latest
    environment: production  # This ensures manual approval is required
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4

      - name: "Azure Login using OIDC"
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v3

      - name: "Terraform Init"
        run: terraform init

    # Download saved plan from artifacts  
      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
            name: tfplantest

      - name: "Terraform Apply (Manual Approval Required)"
        run: terraform apply tfplantest
        
