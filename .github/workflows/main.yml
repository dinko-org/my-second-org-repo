name: Run Azure Login with OIDC
on:
#  push:
 #   branches:
#      - main
    workflow_dispatch:
  #      inputs:
  #          rg_name:
  #              description: "RG Name - no spaces or special characters"
  #              required: True
  #          rg_location:
  #              description: "RG Location - no spaces or special characters"
  #              required: True
                
permissions:
  id-token: write
  contents: read

 # These environment variables are used by the terraform azure provider to setup OIDD authenticate. 
env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  TF_VAR_rg_name: ${{ inputs.rg_name }}
  TF_VAR_rg_location: ${{ inputs.rg_location }}
 
  
jobs:
  terraform_analysis:
    runs-on: ubuntu-latest
    environment: dev
    steps:

     # Step 1: Checkout Repo
      - name: Checkout repository
        uses: actions/checkout@v4
        
      # Step 3: Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      # Step 4: Initialize Terraform (Remote Backend)
      - name: Terraform Init
        run: terraform init

      - name: "Terraform Format Check"
        run: terraform fmt -check
        continue-on-error: true  # Fails if formatting is incorrect

      - name: "Terraform Validate"
        run: terraform validate  

    #  - name: "Terraform List State"
     #   run: terraform state list
      
      # Step 5: Terraform Plan
      - name: Terraform Plan
        run: terraform plan -out=tfplan
        
      - name: "Upload Terraform Plan"
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

          # Create string output of Terraform Plan
      - name: Create String Output
        id: tf-plan-string
        run: |
          TERRAFORM_PLAN=$(terraform show -no-color tfplan)
        
          delimiter="$(openssl rand -hex 8)"
          echo "summary<<${delimiter}" >> $GITHUB_OUTPUT
          echo "## Terraform Plan Output" >> $GITHUB_OUTPUT
          echo "<details><summary>Click to expand</summary>" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo '```terraform' >> $GITHUB_OUTPUT
          echo "$TERRAFORM_PLAN" >> $GITHUB_OUTPUT
          echo '```' >> $GITHUB_OUTPUT
          echo "</details>" >> $GITHUB_OUTPUT
          echo "${delimiter}" >> $GITHUB_OUTPUT
        
    # Publish Terraform Plan as task summary
      - name: Publish Terraform Plan to Task Summary
        env:
          SUMMARY: ${{ steps.tf-plan-string.outputs.summary }}
        run: |
          echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY
          
        
  deploy-to-prod:
    name: "deploy to prod"
    needs: terraform_analysis
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4

      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v3

      - name: "Terraform Init"
        run: terraform init

    # Download saved plan from artifacts  
      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
            name: tfplan

      - name: "Terraform Apply to Prod"
        run: terraform apply tfplan
        
